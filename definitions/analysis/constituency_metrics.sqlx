config {
    type: "table",
    columns: {
        constituencyid: "The hashed uniqueid for each Constituency",
        onsconstid: "The natural uniqueid for each Constituency",
        constituency_name: "The name of the Constituency",
        total_premises: "The distinct count of all gambling full addresses (premisesid) by constituency",
        total_operational_premises: "The distinct count of all gambling full addresses (premisesid) by constituency where google api returned 'operation' - caveat: validation required",
        total_closed_permanently_premises: "The distinct count of all gambling full addresses (premisesid) by constituency where google api returned 'closed_permanently' - caveat:  validation required",
        total_closed_temporarily_premises: "The distinct count of all gambling full addresses (premisesid) by constituency where google api returned 'closed_temporarily' - caveat:  validation required",
        total_betting_shops_licences: "The total betting shop activity liscences referenced",
        total_adult_gaming_centre_licences: "The total adult gaming centre activity liscences referenced",
        total_bingo_licences: "The total bingo activity liscences referenced",
        total_missing_licences: "The total missing activity liscences referenced",
        total_family_entertainment_centre_licences: "The total family centre entertainment activity liscences",
        total_casino_licences: "The total casino activity liscences",
        total_licenced_activities : "The total activity liscences referenced",
        imd_rank_2019: "Index of Multiple Deprivation constituency rank where rank 1 is the most deprived",
        income: "Measures the proportion of the population in an area experiencing deprivation relating to low income",
        employment: "Measures the proportion of the working-age population in an area involuntarily excluded from the labour market",
        education_skills_and_training: "measures the lack of attainment and skills in the local population",
        health_deprivation_and_disability: "measures the risk of premature death and the impairment of quality of life through poor physical or mental health",
        crime: "measures the risk of personal and material victimisation at local level",
        barriers_to_housing_and_services: "measures the physical and financial accessibility of housing and local services",
        living_environment: "measures the quality of the local environment. The indicators fall into two sub-domains. The 'indoors' living environment measures the quality of housing; while the 'outdoors' living environment contains measures of air quality and road traffic accidents",
        raw_dateofthisupdate: "The date this dataset was update at source",
        raw_dateofdataset: "The date of this datasets availability",
        fulltime_students: "",
        intermediate_occupations: "",
        managerial_administrative_and_professional_occupations: "",
        routine_and_manual_occupations: "",
        never_worked_longterm_unemployed: ""
            },
    assertions: {
        uniqueKey: ["constituencyid"]
    }
}
-- File name is constituency_metrics.sqlx

WITH grouped_prem_with_licences AS(
SELECT
    dp.constituency_name,
    COUNT(DISTINCT dp.premisesid) AS total_premises,
    SUM(plg.betting_shop) AS total_betting_shops_licences,
    SUM(plg.adult_gaming_centre) AS total_adult_gaming_centre_licences,
    SUM(plg.bingo) AS total_bingo_licences,
    SUM(plg.missing) AS total_missing_licences,
    SUM(plg.family_entertainment_centre) AS total_family_entertainment_centre_licences ,
    SUM(plg.casino) AS total_casino_licences,
    SUM(plg.pool_betting) AS total_pool_betting,
    SUM(plg.total_licenced_activities) AS total_licenced_activities,
    COUNT(DISTINCT CASE WHEN gapi.g_business_status = "operational" THEN dp.premisesid END) AS total_operational_premises,
    COUNT(DISTINCT CASE WHEN gapi.g_business_status = "closed_permanently" THEN dp.premisesid END) AS total_closed_permanently_premises,
    COUNT(DISTINCT CASE WHEN gapi.g_business_status = "closed_temporarily" THEN dp.premisesid END) AS total_closed_temporarily_premises
FROM ${ref("dim_premises")} dp
    LEFT JOIN ${ref("stg_premises_liscences_grouped")} plg USING(premisesid)
    LEFT JOIN ${ref("dim_gbusiness_status")} gapi USING(premisesid)
WHERE constituency_name IS NOT NULL
GROUP BY constituency_name
)

SELECT
    ac.constituencyid,
    ac.onsconstid,
    ac.constituency_name,
    gpl.total_premises,
    gpl.total_betting_shops_licences,
    gpl.total_adult_gaming_centre_licences,
    gpl.total_bingo_licences,
    gpl.total_pool_betting,
    gpl.total_missing_licences,
    gpl.total_family_entertainment_centre_licences,
    gpl.total_casino_licences,
    gpl.total_licenced_activities,
    gpl.total_operational_premises,
    gpl.total_closed_permanently_premises,
    gpl.total_closed_temporarily_premises,
    d.imd_rank_2019,
    d.income,
    d.employment,
    d.education_skills_and_training,
    d.health_deprivation_and_disability,
    d.crime,
    d.barriers_to_housing_and_services,
    d.living_environment,
    n.fulltime_students,
    n.intermediate_occupations,
    n.managerial_administrative_and_professional_occupations,
    n.routine_and_manual_occupations,
    n.never_worked_longterm_unemployed,
    n2.higher_managerial_administrative_and_professional_occupations,
    n2.lower_managerial_administrative_and_professional_occupations,
    n2.intermediate_occupations AS intermediate_occupations_v,
    n2.small_employers_and_own_account_workers,
    n2.lower_supervisory_and_technical_occupations,
    n2.semiroutine_occupations,
    n2.routine_occupations,
    n2.never_worked_longterm_unemployed AS never_worked_longterm_unemployed_v,
    n2.fulltime_students AS fulltime_students_v
FROM ${ref("stg_all_constituencies")} ac 
    LEFT JOIN ${ref("dim_deprivation")} d ON ac.constituencyid = d.constituencyid
    LEFT JOIN ${ref("fact_national_socio_economic_class")} n ON ac.constituencyid = n.constituencyid
    LEFT JOIN ${ref("fact_variable_national_socio_economic_class")} n2 ON ac.constituencyid = n2.constituencyid
    LEFT JOIN grouped_prem_with_licences gpl ON TRIM(ac.constituency_name) = TRIM(gpl.constituency_name)  